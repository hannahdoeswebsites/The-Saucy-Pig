@import url(http://fonts.googleapis.com/css?family=Roboto+Condensed:300,400);
html {
  box-sizing: border-box; }

*,
*::after,
*::before {
  box-sizing: inherit; }

body {
  font-family: "Roboto Condensed", sans-serif;
  background-color: red;
  color: #333;
  max-width: 68em;
  margin-left: auto;
  margin-right: auto; }
  body::after {
    clear: both;
    content: "";
    display: table; }

header {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 100%;
  background-color: black;
  border: 1px solid red;
  height: auto;
  margin-top: 50px; }
  header:last-child {
    margin-right: 0; }
  header img {
    vertical-align: middle;
    float: left;
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 23.2317613015%;
    border: 1px solid red;
    margin-right: 0px; }
    header img:last-child {
      margin-right: 0; }
  header div {
    color: white;
    font-weight: lighter;
    border: 1px solid red;
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 40.2913699012%;
    height: auto;
    text-align: center;
    line-height: 30px;
    margin-top: 10px; }
    header div:last-child {
      margin-right: 0; }
    header div h2 {
      font-size: 30px; }
    header div h3 {
      font-size: 22px; }

.contact {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 23.2317613015%;
  float: right;
  color: red;
  font-weight: bold;
  font-size: 20px;
  background-color: black; }
  .contact:last-child {
    margin-right: 0; }
  .contact i {
    color: white; }

.menu {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 74.4105871005%;
  border: 1px solid red;
  margin: 0 auto;
  float: right;
  height: 100px;
  background-color: black; }
  .menu:last-child {
    margin-right: 0; }

.images {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 25.5348084625%;
  border: 1px solid red;
  margin: 0 auto;
  float: left;
  height: 100px;
  background-color: black; }
  .images:last-child {
    margin-right: 0; }

footer {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 100%;
  border: 1px solid red;
  margin: 0 auto;
  height: 100px;
  background-color: black; }
  footer:last-child {
    margin-right: 0; }

/*# sourceMappingURL=data:application/json;base64, */